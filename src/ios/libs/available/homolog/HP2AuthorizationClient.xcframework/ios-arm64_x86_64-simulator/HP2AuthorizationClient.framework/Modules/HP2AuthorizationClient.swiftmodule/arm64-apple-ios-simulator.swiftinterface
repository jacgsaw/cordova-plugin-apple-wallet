// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 effective-4.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name HP2AuthorizationClient
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AlamofireHST
import CommonCrypto
import Foundation
@_exported import HP2AuthorizationClient
import Security
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class HP2ServiceClient {
  public static func executeGetApplePayload<D>(urlWebService: Swift.String, responseClass: D.Type, timeoutSecs: Swift.Int, clientCertData: Foundation.NSData, clientCertPass: Swift.String, rootCertData: Foundation.NSData, apiKey: Swift.String?, jwtAuth: Swift.String, data: Foundation.NSData) throws -> any Swift.Decodable where D : Swift.Decodable
  public static func executeJsonWebServiceAuthorization<E, D>(urlWebService: Swift.String, request: E, responseClass: D.Type, timeoutSecs: Swift.Int, clientCertData: Foundation.NSData, clientCertPass: Swift.String, rootCertData: Foundation.NSData, apiKey: Swift.String?) throws -> any Swift.Decodable where E : Swift.Encodable, D : Swift.Decodable
  @objc deinit
}
public class HttpClientCertificateData {
  public init(data: Foundation.Data, password: Swift.String)
  public func urlCredential() -> Foundation.URLCredential
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Utils {
  public static func convertArray2HexStr(data: Foundation.NSData) -> Swift.String
  public static func convertArray2HexStr(bytes: [Swift.UInt8]) -> Swift.String
  public static func secKeyCreateWithData(keyData: Foundation.NSData) throws -> Security.SecKey
  @objc deinit
}
public class TLVData {
  public init(rawData: Foundation.Data?)
  public init(data: Foundation.Data?, startPos: Swift.Int)
  public init(tag: Foundation.Data, len: Foundation.Data, value: Foundation.Data)
  public init(tag: Foundation.Data, value: Foundation.Data)
  convenience public init(rawDataString: Swift.String) throws
  convenience public init(tagToCopy: HP2AuthorizationClient.TLVData)
  public func getTag() -> Foundation.Data
  public func getLen() -> Swift.Int
  public func getValue() -> Foundation.Data
  public func getLenData() -> Foundation.Data
  public func getRawData() -> Foundation.Data
  public func getTotalLen() -> Swift.Int
  public func getChildren() -> Swift.Array<HP2AuthorizationClient.TLVData>
  public func findTag(tagToFind: Foundation.Data) -> HP2AuthorizationClient.TLVData?
  public func updateFromChildren()
  @objc deinit
}
public struct WebServiceException : Swift.Error {
  public init()
  public init(_ message: Swift.String)
  public func getMessage() -> Swift.String
}
@_hasMissingDesignatedInitializers public class CertificateVerifier {
  public static func verify(certificateP12: Foundation.NSData, password: Swift.String, pubKeyData: Foundation.NSData) throws
  public static func pemToDER(certificatePEM: Foundation.NSData) throws -> Foundation.NSData
  @objc deinit
}
